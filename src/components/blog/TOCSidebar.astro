---
import type { TOCSection } from "@/lib/post-manager"
import { PostManager } from "@/lib/post-manager"
import TOCSectionComponent from "@/components/blog/TOCSection.astro"
import { ScrollArea } from "@/components/ui/scroll-area"

interface Props {
  sections: TOCSection[]
  currentPostId: string
}

const { sections, currentPostId } = Astro.props

const blogManager = PostManager.getInstance()
const isCurrentSubpost = blogManager.isSubpost(currentPostId)
const parentId = isCurrentSubpost ? blogManager.getParentId(currentPostId) : currentPostId
const hasSections = sections.length > 0
---

{
  hasSections && (
    <aside
      id="toc-sidebar-container"
      role="complementary"
      aria-labelledby="toc-heading"
      class="sticky top-20 col-start-1 row-span-1 mr-8 ml-auto hidden h-[calc(100vh-5rem)] max-w-md xl:block"
    >
      <ScrollArea
        client:load
        className="flex max-h-[calc(100vh-8rem)] flex-col overflow-y-auto"
        type="hover"
        data-toc-scroll-area
      >
        <div class="flex flex-col gap-2 p-2">
          <header>
            <h2
              id="toc-heading"
              class="text-foreground/80 border-border/50 mb-2 border-b pb-1 text-sm font-semibold"
            >
              Table of Contents
            </h2>
          </header>
          <nav aria-labelledby="toc-heading">
            <ul class="space-y-2" role="list">
              {sections.map((section, index) => {
                const isFirstSubpost =
                  section.type === "subpost" &&
                  (index === 0 || sections[index - 1].type === "parent")

                return (
                  <li role="listitem">
                    {isFirstSubpost && (
                      <div
                        class="mb-4 flex items-center gap-3"
                        role="separator"
                        aria-label="Subposts section"
                      >
                        <div class="bg-border h-px flex-1" />
                        <span class="text-muted-foreground px-2 text-xs font-semibold tracking-wider uppercase">
                          Subposts
                        </span>
                        <div class="bg-border h-px flex-1" />
                      </div>
                    )}
                    <TOCSectionComponent
                      section={section}
                      currentPostId={currentPostId}
                      isCurrentSubpost={isCurrentSubpost}
                      parentId={parentId}
                    />
                  </li>
                )
              })}
            </ul>
          </nav>
        </div>
      </ScrollArea>
    </aside>
  )
}

<script>
  import { BaseTOCController } from "@/lib/toc-scroll"

  class TOCSidebarController extends BaseTOCController {
    getContainerSelector() {
      return "#toc-sidebar-container"
    }

    getScrollAreaSelector() {
      return "[data-radix-scroll-area-viewport]"
    }

    getContainerAttribute() {
      return "data-toc-scroll-area"
    }

    getLinkSelector() {
      return "#toc-sidebar-container [data-heading-link]"
    }

    getMaskClasses() {
      return { top: "mask-t-from-90%", bottom: "mask-b-from-90%" }
    }
  }

  const controller = new TOCSidebarController()

  document.addEventListener("astro:page-load", () => controller.init())
  document.addEventListener("astro:after-swap", () => {
    controller.cleanup()
    controller.init()
  })
  document.addEventListener("astro:before-swap", () => controller.cleanup())
</script>
