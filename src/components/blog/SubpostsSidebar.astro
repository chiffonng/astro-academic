---
import type { SubpostContext } from "@/lib/post-manager"
import PostItem from "@/components/blog/PostItem.astro"
import SubpostItem from "@/components/blog/SubpostItem.astro"
import { ScrollArea } from "@/components/ui/scroll-area"

interface Props {
  subpostContext: SubpostContext
  class?: string
}

const { subpostContext, class: className } = Astro.props
const { currentPost, parentPost, subposts, metadata } = subpostContext

const activePost = parentPost || currentPost
const isActivePost = activePost?.id === currentPost.id

const activePostMetadata = metadata.get(activePost.id)
const activePostWordCount = activePostMetadata?.wordCount || 0
const activePostCombinedWordCount = activePostMetadata?.combinedWordCount

const subpostsWithWordCount = subposts.map((subpost) => ({
  ...subpost,
  wordCount: metadata.get(subpost.id)?.wordCount || 0
}))

const hasSubposts = subpostsWithWordCount.length > 0
---

<aside
  id="subposts-sidebar-container"
  class={`sticky top-20 col-start-3 row-span-1 mr-auto ml-8 hidden h-[calc(100vh-5rem)] max-w-md xl:block ${className || ""}`}
  role="complementary"
  aria-label="Subposts navigation"
>
  <ScrollArea
    client:load
    className="flex max-h-[calc(100vh-8rem)] flex-col overflow-y-auto"
    data-subposts-sidebar-scroll
  >
    <div class="p-2">
      <nav aria-label="Post and subposts">
        <ul class="space-y-1" role="list">
          {
            activePost && (
              <li role="listitem">
                <PostItem
                  post={activePost}
                  isActive={isActivePost}
                  wordCount={activePostWordCount}
                  combinedWordCount={activePostCombinedWordCount || undefined}
                  variant="sidebar"
                  href={isActivePost ? undefined : `/blog/${activePost.id}#post-title`}
                  isParentPost={!!parentPost}
                />
              </li>
            )
          }

          {
            hasSubposts && (
              <li role="listitem">
                <div class="ml-4 space-y-1" role="group" aria-labelledby="subposts-heading">
                  <h4
                    id="subposts-heading"
                    class="text-muted-foreground/60 mb-1 px-2 text-xs font-semibold tracking-wider uppercase"
                  >
                    Subposts
                  </h4>
                  <ul class="space-y-1" role="list">
                    {subpostsWithWordCount.map((subpost) => (
                      <li role="listitem">
                        <SubpostItem
                          subpost={subpost}
                          isActive={currentPost.id === subpost.id}
                          variant="sidebar"
                        />
                      </li>
                    ))}
                  </ul>
                </div>
              </li>
            )
          }
        </ul>
      </nav>
    </div>
  </ScrollArea>
</aside>

<script>
  import { BaseScrollController } from "@/lib/subposts-scroll"

  class SubpostsSidebarController extends BaseScrollController {
    getContainerSelector() {
      return "#subposts-sidebar-container"
    }

    getScrollAreaSelector() {
      return "[data-radix-scroll-area-viewport]"
    }

    getContainerAttribute() {
      return "data-subposts-sidebar-scroll"
    }

    getActiveItemSelector() {
      return ".subposts-sidebar-active-item"
    }

    getMaskClasses() {
      return { top: "mask-t-from-90%", bottom: "mask-b-from-90%" }
    }
  }

  const controller = new SubpostsSidebarController()

  document.addEventListener("astro:page-load", () => controller.init())
  document.addEventListener("astro:after-swap", () => {
    controller.cleanup()
    controller.init()
  })
  document.addEventListener("astro:before-swap", () => controller.cleanup())
</script>
