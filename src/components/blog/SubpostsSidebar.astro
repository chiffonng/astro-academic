---
import type { Post, PostMeta } from "@/lib/blog/types"
import SubpostNavItem from "@/components/blog/SubpostNavItem.astro"
import SubpostsList from "@/components/blog/SubpostsList.astro"
import { ScrollArea } from "@/components/ui/scroll-area"

interface Props {
  currentPost: Post
  parentPost?: Post | null
  subposts?: PostMeta[]
  activePost: PostMeta
  isActivePost: boolean
  class?: string
}

const {
  currentPost,
  parentPost,
  subposts = [],
  activePost,
  isActivePost,
  class: className
} = Astro.props

// Only render if there's meaningful content (has parent OR has subposts)
const hasParent = !!parentPost
const hasSubposts = subposts.length > 0
const shouldRender = hasParent || hasSubposts
---

{
  shouldRender && activePost && (
    <aside
      id="subposts-sidebar-container"
      class={className}
      role="complementary"
      aria-label="Subposts navigation"
    >
      <ScrollArea
        client:load
        className="flex max-h-[calc(100vh-8rem)] flex-col overflow-y-auto"
        data-scroll-container
      >
        <div class="p-2">
          <nav aria-label="Post and subposts">
            <div class="space-y-1">
              <SubpostNavItem post={activePost} isActive={isActivePost} isSubpost={false} />
              <h4
                id="subposts-heading"
                class="text-muted-foreground my-1 text-xs font-semibold tracking-wider uppercase"
              >
                Subposts
              </h4>
              <SubpostsList subposts={subposts} currentPostId={currentPost.id} />
            </div>
          </nav>
        </div>
      </ScrollArea>
    </aside>
  )
}

<script>
  import { BaseScrollController } from "@/lib/blog/scroll"

  class SubpostsSidebarController extends BaseScrollController {
    getContainerSelector() {
      return "#subposts-sidebar-container"
    }

    // Override for Radix ScrollArea (sidebar uses ScrollArea)
    protected getScrollAreaSelector(): string {
      return "[data-radix-scroll-area-viewport]"
    }

    protected getContainerAttribute(): string {
      return "data-scroll-container"
    }

    getActiveItemSelector() {
      return "[aria-current='page']"
    }

    getMaskClasses() {
      return { top: "mask-t-from-90%", bottom: "mask-b-from-90%" }
    }
  }

  const controller = new SubpostsSidebarController()

  document.addEventListener("astro:page-load", () => controller.init())
  document.addEventListener("astro:after-swap", () => {
    controller.cleanup()
    controller.init()
  })
  document.addEventListener("astro:before-swap", () => controller.cleanup())
</script>
