---
import type { CollectionEntry } from "astro:content"

import { cn } from "@/lib/utils"
import { Link } from "@/components"
import ProfileLinks from "@/components/profile/ProfileLinks.astro"
import AvatarComponent from "@/components/ui/avatar"

interface Props {
  author: CollectionEntry<"authors">
}

const { author } = Astro.props
const { name, avatar, bio, pronouns, links } = author.data
const currentPath = Astro.url.pathname
const isAuthorPage = currentPath === `/${author.collection}/${author.id}`
---

<div
  class="has-[a:hover]:bg-secondary/50 overflow-hidden rounded-xl border p-4 transition-colors duration-300 ease-in-out"
>
  <div class="flex flex-wrap gap-4">
    <Link href={`/${author.collection}/${author.id}`}>
      <AvatarComponent
        client:load
        src={avatar}
        alt={`Avatar of ${name}`}
        fallback={name
          .split(" ")
          .map((word) => word[0])
          .filter((char) => /[A-Za-z]/.test(char))
          .join("")}
        className={cn(
          'size-36 rounded-md [&>[data-slot="avatar-fallback"]]:rounded-md',
          !isAuthorPage &&
            "hover:ring-accent transition-shadow duration-300 hover:cursor-pointer hover:ring-3"
        )}
      />
    </Link>
    <div class="flex grow flex-col justify-between gap-y-4">
      <div>
        <div class="flex flex-wrap items-center gap-x-2">
          <Link href={`/${author.collection}/${author.id}`} class="hover:text-primary">
            <h3 class="text-lg font-medium">{name}</h3>
          </Link>
          {pronouns && <span class="text-muted-foreground text-sm">({pronouns})</span>}
        </div>
        <p class="text-muted-foreground text-sm">{bio}</p>
      </div>
      <ProfileLinks links={links} />
    </div>
  </div>
</div>
