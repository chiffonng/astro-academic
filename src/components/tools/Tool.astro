---
import Badge from "@/components/base/Badge.astro"
import Icon from "@/components/base/Icon.astro"

import { getTagVariant, ToolTag } from "./tags"

export interface Props {
  name: string
  description: string
  href: string
  icon: string
  tags?: ToolTag[]
}

const { name, description, href, icon, tags } = Astro.props

const getSafeIcon = (icon: string): string => {
  return icon && icon.trim() !== "" ? icon : "mingcute:box-line"
}

const generateId = (name: string): string => {
  return (
    "tool_" +
    name
      .toLowerCase()
      .replace(/[^a-z0-9\s-]/g, "") // Remove special characters except spaces and hyphens
      .replace(/\s+/g, "-") // Replace spaces with hyphens
      .replace(/-+/g, "-") // Replace multiple hyphens with single hyphen
      .replace(/^-|-$/g, "")
  ) // Remove leading/trailing hyphens
}

const safeIcon = getSafeIcon(icon)
const label = generateId(name)
---

<a
  class="group relative text-sm"
  href={href}
  id={name}
  target="_blank"
  rel="noopener noreferrer nofollow"
>
  <div
    class="hover:border-border hover:bg-muted flex items-center gap-2 rounded-lg px-3 py-2 transition-colors"
  >
    <Icon name={safeIcon} size="2rem" title={name} aria-labelledby={label} />
    <div class="flex flex-grow flex-col">
      <div class="flex flex-wrap items-center gap-2">
        <div id={label} class="text-foreground font-medium">{name}</div>
        {
          tags && tags.length > 0 && (
            <div class="flex flex-wrap gap-1">
              {tags.map((tag: ToolTag) => (
                <Badge variant={getTagVariant(tag)} class="text-xs">
                  {tag}
                </Badge>
              ))}
            </div>
          )
        }
      </div>
      <div class="text-muted-foreground">{description}</div>
    </div>
  </div>
</a>
