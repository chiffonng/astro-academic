---
import "@/styles/callout.css"

import { Image } from "astro:assets"

import { PostManager, type PostContext } from "@/lib/post-manager"
import Layout from "@/layouts/Layout.astro"
import Badge from "@/components/base/Badge.astro"
import Icon from "@/components/base/Icon.astro"
import BackToTop from "@/components/blog/BackToTop.astro"
import PostHead from "@/components/blog/PostHead.astro"
import PostMetadata from "@/components/blog/PostMetadata.astro"
import PostNavigation from "@/components/blog/PostNavigation.astro"
import SubpostsHeader from "@/components/blog/SubpostsHeader.astro"
import SubpostsSidebar from "@/components/blog/SubpostsSidebar.astro"
import TOCHeader from "@/components/blog/TOCHeader.astro"
import TOCSidebar from "@/components/blog/TOCSidebar.astro"
import Breadcrumbs from "@/components/layout/Breadcrumbs.astro"

interface Props {
  postContext: PostContext
}

const { postContext } = Astro.props

// Destructure context for cleaner code
const {
  post,
  headings,
  isSubpost: isCurrentSubpost,
  parentPost,
  metadata,
  tocSections
} = postContext

const currentPostId = post.id
const { hasSubposts } = metadata

// Get optimized subpost context for components
const subpostContext = await PostManager.getInstance().getSubpostContext(currentPostId)
---

<Layout>
  <PostHead slot="head" post={post} />
  {
    subpostContext && (hasSubposts || isCurrentSubpost) && (
      <SubpostsHeader slot="subposts-navigation" subpostContext={subpostContext} />
    )
  }
  {
    headings?.length > 0 &&
      !(isCurrentSubpost && headings.length === 1 && headings[0].text === post.data.title) && (
        <TOCHeader slot="table-of-contents" headings={headings} />
      )
  }

  <main
    class="grid grid-cols-[minmax(0px,1fr)_min(calc(var(--breakpoint-md)-2rem),100%)_minmax(0px,1fr)] gap-y-6"
  >
    {/** Navigation breadcrumbs */}
    <nav class="col-start-2" aria-label="Breadcrumb">
      <Breadcrumbs
        items={[
          { href: `/${post.collection}`, label: "Blog", icon: "mingcute:book-5-line" },
          ...(isCurrentSubpost && parentPost
            ? [
                {
                  href: `/${post.collection}/${parentPost.id}`,
                  label: parentPost.data.title,
                  icon: "mingcute:documents-line"
                },
                {
                  href: `/${post.collection}/${currentPostId}`,
                  label: post.data.title,
                  icon: "mingcute:document-line"
                }
              ]
            : [
                {
                  href: `/${post.collection}/${currentPostId}`,
                  label: post.data.title,
                  icon: "mingcute:book-line"
                }
              ])
        ]}
      />
    </nav>

    {/** Hero image */}
    {
      post.data.image && (
        <Image
          src={post.data.image}
          alt={post.data.title}
          width={1200}
          height={630}
          class="col-span-full mx-auto w-full max-w-5xl object-cover"
        />
      )
    }

    {/** Post header */}
    <header class="col-start-2 flex flex-col gap-y-4 text-center">
      <h1 class="scroll-mt-31 text-3xl leading-tight font-medium sm:text-4xl" id="post-title">
        {post.data.title}
      </h1>

      {/** Post metadata */}
      <PostMetadata metadata={metadata} variant="full" />

      {/** Tags */}
      {
        post.data.tags?.length > 0 && (
          <div class="flex flex-wrap justify-center gap-2" role="list" aria-label="Post tags">
            {post.data.tags.map((tag) => (
              <Badge href={`/tags/${tag}`} variant="secondary" role="listitem">
                <Icon name="hashtag" class="size-3" />
                {tag}
              </Badge>
            ))}
          </div>
        )
      }
    </header>

    {/** Top navigation */}
    <PostNavigation currentPost={post} />

    {/** Table of contents sidebar */}
    {tocSections.length > 0 && <TOCSidebar sections={tocSections} currentPostId={currentPostId} />}

    {/** Main article content */}
    <article class="prose col-start-2 max-w-none" role="main">
      <slot />
    </article>

    {/** Subposts sidebar */}
    {
      subpostContext && (hasSubposts || isCurrentSubpost) && (
        <SubpostsSidebar subpostContext={subpostContext} class="w-64" />
      )
    }

    {/** Bottom navigation */}
    <PostNavigation currentPost={post} />
  </main>

  <BackToTop />
</Layout>
